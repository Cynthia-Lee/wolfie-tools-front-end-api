@use '../../global/wolfie' as *;

//$muted-color: gray;//mix(white, $background-color, 70%);
$inactive-color: #333;
$text-color: black;
$highlight-color: $primary-color;
$width: 320px;
$transition-time: 300ms;

$rounded: 4px;

$filled-color: black;

.winput {
  font-family: inherit;
  position: relative;
  width: $width;
  margin: 1rem 0rem;

  input {
    font-size: 16px;
    width: $width;
    color: $inactive-color;
  }

  label {
    color: $inactive-color;
    font-size: 16px;
    font-weight: normal;
    position: absolute;
    pointer-events: none;
  }

  &.lined {
    label {
      transition: $transition-time ease all; // label return animation
      left: 0px;
      top: 10px;
    }

    input {
      background: none;
      padding: 8px 5px 6px 0px;
      display: block;
      border: none;
      border-radius: 0;
      border-bottom: 1px solid $inactive-color;
      
      &:focus {
        outline: none;
        
        ~ label{
          color: $highlight-color;
        }
        
        // bar animation
        ~ .bar:before {
          width: $width;
        }
        ~ .bar2:before, ~.bar2:after { //input:focus ~ .bar:before, input:focus ~ .bar:after {width:50%;}
          width: 50%;
        }
      }
    
      // label animation        
      &:focus ~ label{
        color: $highlight-color;
      }

      &:focus ~ label, &:valid ~ label, &[type=number] ~ label { // active state
        top: -14px;
        font-size: 12px;
      }
    }
  }

  &.filled {
    input {
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
      -webkit-appearance: none;
      appearance: none;
      border: 0;
      padding: 16px 12px 0 12px;
      height: 56px; //
      background: rgba($filled-color, .05);
      box-shadow: inset 0 -1px 0 rgba($filled-color,.3);
      color: $filled-color;
      transition: all $transition-time ease; //.15
    
      &:hover {
        background: rgba($filled-color,.04); // needed? use with animations
        box-shadow: inset 0 -1px 0 rgba($filled-color,.5); //gets darker
      }

      &:not(:placeholder-shown) { // TEST
        ~ .label {
          color: rgba($filled-color,.5);
          transform: translate3d(0,-12px,0) scale(.75);
        }
      }

      &:focus {
        outline: none;
        ~ label {
          color: $highlight-color;
        }
        ~ .bar3 {
            box-shadow: inset 0 -2px 0 $highlight-color; // for instant bar
            background: rgba($filled-color,.05); //crate dark/shade color in the back
            transform: scaleX(1);
            transition: all .1s ease;
        }
        ~ .bar:before { // left to right bar animation
          width: $width;
        }
        ~ .bar2:before, ~.bar2:after { //input:focus ~ .bar:before, input:focus ~ .bar:after {width:50%;}
          width: 50%;
        }
      }
      &:focus ~ label, &:valid ~ label { // active state
        transform: translate3d(0,-12px,0) scale(.75);
      }
    }

    label {
      left: 12px;
      top: 20px;
      transform-origin: 0 0;
      transform: translate3d(0,0,0);
      transition: all $transition-time ease; //0.3s
    }
  }

  &.outlined {
    input {
      border-radius: 4px;
      -webkit-appearance: none;
      appearance: none;
      border: 1px solid;
      padding: 16px 12px 0 12px;
      height: 56px; //
      background: none;
      color: $filled-color;
      transition: all $transition-time ease; //.15
    
      &:hover {
        
      }

      &:not(:placeholder-shown) {
        ~ .label {
          color: rgba($filled-color,.5);
          transform: translate3d(0,-27px,0) scale(.75);
        }
      }

      &:focus {
        outline: none;
        ~ label {
          color: $highlight-color;
        }

        ~ .barOutlined {
            border: 2px solid;
            border-color: $highlight-color;
            border-radius: 4px;
            transform: scaleX(1);
        }
        ~ .bar3 {
            box-shadow: inset 0 -2px 0 $highlight-color; // for instant bar
            background: rgba($filled-color,.05); //create dark/shade color in the back
            transform: scaleX(1);
            transition: all .1s ease;
        }
        ~ .bar:before { // left to right bar animation
          width: $width;
        }
        ~ .bar2:before, ~.bar2:after { //input:focus ~ .bar:before, input:focus ~ .bar:after {width:50%;}
          width: 50%;
        }
      }
      &:focus ~ label, &:valid ~ label { // active state
        transform: translate3d(0,-27px,0) scale(.75);
      }
    }

    label {
      left: 12px;
      top: 20px;
      transform-origin: 0 0;
      transform: translate3d(0,0,0);
      transition: all $transition-time ease; //0.3s
    }
  }
}

*, :before, :after { //for active line color animation
  box-sizing: border-box;
}
  
.bar {
  position: relative;
  display: block;
  width: $width;
  &:before {
    content: '';
    height: 2px;
    width: 0;
    bottom: 0px;
    position: absolute;
    background: $highlight-color;
    transition: $transition-time ease all;
    left: 0%;
  }
}

.bar2 {
  position: relative;
  display: block;
  width: $width; 

  &:before, &:after {
    content:'';
    height: 2px; 
    width: 0;
    bottom: 0px; //1px
    position:absolute;
    background: $highlight-color; 
    transition: 0.2s ease all; 
    -moz-transition: 0.2s ease all; 
    -webkit-transition: 0.2s ease all;
  }
  &:before {
    left:50%;
  }
  &:after {
    right:50%; 
  }
}

.bar3 {
  position: absolute;
  top: 0; //color
  left: 0; //color
  width: 100%; //color
  height: 100%; //color
  background: rgba($filled-color, .05); // darken
  transform: scaleX(0);
  transform-origin: left;
}

.barOutlined {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: scaleX(0);
}